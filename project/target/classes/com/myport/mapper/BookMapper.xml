<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myport.mapper.BookMapper">

	<!-- criteria(검색조건) -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="AND">
			<foreach item="type" collection="typeArr">
				<trim prefix="AND">
					<choose>
						<when test="type == 'A'.toString()">
							<trim prefixOverrides="or">
								<foreach collection="authorArr" item="authorId">
									<trim prefix="or">
										authorId = #{authorId}
									</trim>
								</foreach>
							</trim>
						</when>
						<when test="type == 'C'.toString()">
							cateCode like '%' || #{cateCode} || '%'
						</when>
						<when test="type == 'T'.toString()">
							bookName like '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>


	<!-- 상품 검색 -->
	<select id="getGoodsList" resultType="com.myport.domain.BookVO">
	
		<![CDATA[
		    select * from(
		        select /*+INDEX_DESC(book_product SYS_C008434)*/ rownum as rn, bookId, bookName, ratingavg,
		            (select authorName from book_author where book_product.authorId = book_author.authorId) authorName, authorId,
		            (select cateName from book_category where book_product.cateCode = book_category.cateCode) cateName,cateCode, 
		            publisher, publeYear, bookPrice, bookDiscount
		        from book_product
		        where 
	    ]]>

		<include refid="criteria"></include>
	    
	    <![CDATA[
	    		        
		        rownum <= #{pageNum} * #{amount} 
	        	)
	        where rn > (#{pageNum} -1) * #{amount}
		]]>

	</select>

	<!-- 상품 총 개수 -->
	<select id="goodsGetTotal" resultType="int">
		select count(*) from book_product
		where
		<include refid="criteria"></include>
		bookId > 0
	</select>

	<!-- 작가 id 리스트 요청 -->
	<select id="getAuthorIdList" resultType="String">
		select authorid from
		book_author where authorName like '%' || #{keyword} || '%'
	</select>


	<!-- 국내 카테고리 리스트 -->
	<select id="getCateCode1" resultType="com.myport.domain.CateVO">
		<![CDATA[
			select * from book_category where cateCode > 100000 and cateCode < 200000
		]]>
	</select>
	
	<!-- 외국 카테고리 리스트 -->
	<select id="getCateCode2" resultType="com.myport.domain.CateVO">
		<![CDATA[
			select * from book_category where cateCode > 200000 and cateCode < 300000
		]]>
	</select>

	<!-- 검색 대상 카테고리 리스트 -->
	<select id="getCateList" resultType="String">
		select DISTINCT cateCode from book_product where 
		<foreach item="type" collection="typeArr">		
  				<choose>
  					<when test="type == 'A'.toString()">
  						<trim prefixOverrides="or">
		  					<foreach collection="authorArr" item="authorId">
		  						<trim prefix="or">
		  							authorId = #{authorId}
		  						</trim>
		  					</foreach>  						
  						</trim>
  					</when>
  					<when test="type == 'T'.toString()">
  						bookName like '%' || #{keyword} || '%'
  					</when>  					
  				</choose>
  		</foreach>
	
	</select>

	<!-- 카테고리 정보(+검색대상 갯수) -->	
	<select id="getCateInfo" resultType="com.myport.domain.CateFilterDTO">
		select DISTINCT count(*) cateCount, a.cateCode, b.cateName from book_product a left join book_category b on a.cateCode = b.cateCode 
		where 
		<foreach item="type" collection="typeArr">		
  				<choose>
  					<when test="type == 'A'.toString()">
  					
  						<trim prefix="(" suffix=")" prefixOverrides="or">
  						
		  					<foreach collection="authorArr" item="authorId">
		  					
		  						<trim prefix="or">
		  						
		  							authorId = #{authorId}
		  							
		  						</trim>
		  						
		  					</foreach>
		  					  						
  						</trim>
  						
  						and a.cateCode = #{cateCode}
  						
  					</when>
  					
  					<when test="type == 'T'.toString()">
  					
  						bookName like '%' || #{keyword} || '%' and a.cateCode = #{cateCode}
  						 
  					</when>
  					  					
  				</choose>
  		</foreach>
  		
  		group by a.cateCode, b.cateName
	
	</select>
	
	<!-- 상품 정보 -->
	<select id="getGoodsInfo" resultType="com.myport.domain.BookVO">
			select a.BOOKID, a.BOOKNAME, a.AUTHORID, b.AUTHORNAME, a.PUBLEYEAR, a.PUBLISHER, a.CATECODE, c.CATENAME, 
			a.BOOKPRICE, a.BOOKSTOCK, a.BOOKDISCOUNT, a.BOOKINTRO, a.BOOKCONTENTS, a.ratingavg
			from book_product a left outer join book_author b on a.authorId = b.authorId
			left outer join book_category c on a.catecode = c.catecode
			where bookid = #{bookId}	
	</select>

	<!-- 상품 이름  -->
	<select id="getBookIdName" resultType="com.myport.domain.BookVO">
		select bookId, bookName from book_product
		where bookId = #{bookId}
	</select>
	
	
	<!-- 평점순 리스트 -->
	<select id="likeSelect" resultType="com.myport.domain.SelectDTO">
	
		select * from
		(select rownum as rn, bookId, bookName, ratingAvg, (select cateName from book_category where book_product.cateCode = book_category.cateCode) as cateName
		from book_product
		order by ratingAvg desc nulls last)
		<![CDATA[
		where rn < 9
		]]>	
	
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>